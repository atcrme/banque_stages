import 'dart:convert';

import 'package:dart_jsonwebtoken/dart_jsonwebtoken.dart';
import 'package:http/http.dart' as http;

Future<Map<String, dynamic>?> extractJwt(String token) async {
  try {
    var jwt = JWT.decode(token);
    final kid = jwt.header?['kid'];
    if (kid == null) return null;

    // The "kid" is generated by the Google service on the Firebase behalf. We
    // can check that this kid is valid to ensure that the JWT is from the
    // Firebase service.
    final keyResponse = await http.get(Uri.parse(
        'https://www.googleapis.com/robot/v1/metadata/x509/securetoken@system.gserviceaccount.com'));
    if (keyResponse.statusCode != 200) return null;
    final keys = jsonDecode(keyResponse.body) as Map<String, dynamic>;
    if (!keys.containsKey(kid)) return null;
    final pemKey = keys[kid] as String?;
    if (pemKey?.isEmpty ?? false) return null;
    final jwk = RSAPublicKey.cert(pemKey!);

    // Verify the JWT with the public key
    jwt = JWT.verify(token, jwk); // Throws if verification fails

    // Step 4: Validate claims
    final projectName = 'stagess-39d8f';
    if (jwt.payload['aud'] != projectName) return null;

    if (jwt.payload['iss'] != 'https://securetoken.google.com/$projectName') {
      return null;
    }

    final now = DateTime.now().millisecondsSinceEpoch ~/ 1000;
    if (jwt.payload['exp'] < now) return null;

    // If we reach this point, the JWT is valid
    return jwt.payload;
  } catch (e) {
    return null;
  }
}
